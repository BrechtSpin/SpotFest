services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - traefik
      - spotfest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`brechtspin.duckdns.org`)"
      - "traefik.http.routers.rabbitmq.entrypoints=websecure"
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.routers.rabbitmq.tls.certresolver=myresolver"
      # Route dashboard
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.routers.rabbitmq.rule=PathPrefix(`/dash`)"
      - "traefik.http.routers.rabbitmq.middlewares=strip-dash"
      - "traefik.http.middlewares.strip-dash.stripprefix.prefixes=/dash"
    environment:
    # from .env
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  spotfest-db:
    container_name: spotfest-db
    image: mysql:8.0
    restart: always
    volumes:
      - spotfest-db_data:/var/lib/mysql
    networks:
      - spotfest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  happeningservice:
    container_name: happeningservice
    depends_on:
      - rabbitmq
      - spotfest-db
    build:
      context: ./HappeningService
      dockerfile: Dockerfile
    networks:
      - traefik
      - spotfest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-rest.rule=Host(`brechtspin.duckdns.org`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-rest.entrypoints=websecure"
      - "traefik.http.routers.api-rest.tls=true"
      - "traefik.http.routers.api-rest.tls.certresolver=myresolver"
      - "traefik.http.services.api-rest.loadbalancer.server.port=80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Server=mysql;Database=${MYSQL_DATABASE};User=${MYSQL_USER};Password=${MYSQL_PASSWORD}"  
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: ${RABBITMQ_DEFAULT_USER}
      RabbitMQ__Password: ${RABBITMQ_DEFAULT_PASS}

  artistservice:
    container_name: artistservice
    depends_on:
      - rabbitmq
      - spotfest-db
    build:
      context: ./ArtistService
      dockerfile: Dockerfile
    networks:
      - traefik
      - spotfest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-rest.rule=Host(`brechtspin.duckdns.org`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-rest.entrypoints=websecure"
      - "traefik.http.routers.api-rest.tls=true"
      - "traefik.http.routers.api-rest.tls.certresolver=myresolver"
      - "traefik.http.services.api-rest.loadbalancer.server.port=80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Server=mysql;Database=${MYSQL_DATABASE};User=${MYSQL_USER};Password=${MYSQL_PASSWORD}"  
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: ${RABBITMQ_DEFAULT_USER}
      RabbitMQ__Password: ${RABBITMQ_DEFAULT_PASS}

  dataharvester:
    container_name: dataharvester
    depends_on:
      - rabbitmq
    build:
      context: ./DataHarvester
      dockerfile: Dockerfile
    networks:
      - traefik
      - spotfest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-rest.rule=Host(`brechtspin.duckdns.org`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-rest.entrypoints=websecure"
      - "traefik.http.routers.api-rest.tls=true"
      - "traefik.http.routers.api-rest.tls.certresolver=myresolver"
      - "traefik.http.services.api-rest.loadbalancer.server.port=80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: ${RABBITMQ_DEFAULT_USER}
      RabbitMQ__Password: ${RABBITMQ_DEFAULT_PASS}
      SpotifyAPIClientId: ${SPOTIFY_API_CLIENT_ID}
      SpotifyAPIClientSecret: ${SPOTIFY_API_CLIENT_SECRET}

  jobscheduler:
    container_name: jobscheduler
    build:
      context: ./JobScheduler
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    networks:
      - spotfest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Server=mysql;Database=${MYSQL_DATABASE};User=${MYSQL_USER};Password=${MYSQL_PASSWORD}"  
      RabbitMQ__HostName: rabbitmq
      RabbitMQ__UserName: ${RABBITMQ_DEFAULT_USER}
      RabbitMQ__Password: ${RABBITMQ_DEFAULT_PASS}

  frontend:
    container_name: frontend
    build: ./Frontend
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spa.rule=Host(`brechtspin.duckdns.org`)"
      - "traefik.http.routers.spa.entrypoints=websecure"
      - "traefik.http.routers.spa.tls=true"
      - "traefik.http.routers.spa.tls.certresolver=myresolver"
      - "traefik.http.services.spa.loadbalancer.server.port=80"

volumes:
  spotfest-db_data:
  rabbitmq_data:

networks:
  traefik:
    external: true
  spotfest:
    driver: bridge
