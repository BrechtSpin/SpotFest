// <auto-generated />
using System;
using ArtistService.Data.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtistService.Data.Migrations
{
    [DbContext(typeof(ArtistServiceContext))]
    [Migration("20250511052146_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ArtistService.Models.Artist", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PictureMediumUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PictureSmallUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SpotifyId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.HasKey("Guid");

                    b.HasIndex("SpotifyId")
                        .IsUnique();

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("ArtistService.Models.ArtistMetric", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ArtistGuid")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDay")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Date")
                        .HasComputedColumnSql("DATE(`Date`)", true);

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("DateDay"));

                    b.Property<int>("Followers")
                        .HasColumnType("int");

                    b.Property<long>("Listeners")
                        .HasColumnType("bigint");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("ArtistGuid");

                    b.HasIndex("ArtistGuid", "DateDay")
                        .IsUnique();

                    b.ToTable("ArtistMetrics");
                });

            modelBuilder.Entity("ArtistService.Models.ArtistMetric", b =>
                {
                    b.HasOne("ArtistService.Models.Artist", "Artist")
                        .WithMany("Metrics")
                        .HasForeignKey("ArtistGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ArtistService.Models.Artist", b =>
                {
                    b.Navigation("Metrics");
                });
#pragma warning restore 612, 618
        }
    }
}
